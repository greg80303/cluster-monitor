syntax = "proto3";

package llmariner.clustermonitor.server.v1;

import "google/api/annotations.proto";

option go_package = "github.com/llmariner/cluster-monitor/api/v1";

message ListClusterSnapshotsRequest {
  message Filter {
    // TODO(kenji): Support start time, end time, cluster ID, etc.
  }

  Filter filter = 1;

  enum GroupBy {
    GROUP_BY_UNSPECIFIED = 0;
    GROUP_BY_CLUSTER = 1;
    GROUP_BY_PRODUCT = 2;
  }

  GroupBy group_by = 2;
}

message ListClusterSnapshotsResponse {
  message Value {
    string grouping_value = 1;

    int32 node_count = 2;
    int32 gpu_capacity = 3;
    int32 memory_capacity_gb = 4;
  }

  message Datapoint {
    // timesecond is the Unix timestamp in seconds.
    int64 timestamp = 1;
    repeated Value values = 2;
  }

  repeated Datapoint datapoints = 1;
}

service ClusterMonitorService {
  rpc ListClusterSnapshots(ListClusterSnapshotsRequest) returns (ListClusterSnapshotsResponse) {
    option (google.api.http) = {
      get: "/v1/clustertelemetry/clustersnapshots"
    };
  }
}
