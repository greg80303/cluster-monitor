syntax = "proto3";

package llmariner.clustermonitor.server.v1;

option go_package = "github.com/llmariner/cluster-monitor/api/v1";


message SendClusterTelemetryRequest {
  message Payload {
    oneof message_kind {
      ClusterSnapshot cluster_snapshot = 1;
      GpuTelemetry gpu_telemetry = 2;
      // TODO(kenji): Add more (e.g., node GPU utilization)
    }
  }
  repeated Payload payloads = 1;
}

message ClusterSnapshot {
  message Node {
    string name = 1;
    int32 gpu_capacity = 2;
    int64 memory_capacity = 3;

    message NvidiaAttributes {
      string product = 1;
    }
    NvidiaAttributes nvidia_attributes = 4;

    int32 gpu_occupancy = 5;
    int32 pod_count = 6;
  }

  repeated Node nodes = 1;

  // TODO(kenji): Add more (e.g., GPU workload information).
}

message GpuTelemetry {
  message Node {
    string name = 1;

    float max_gpu_util_percentage = 2;
    float avg_gpu_util_percentage = 3;

    int64 max_gpu_memory_used = 4;
    int64 avg_gpu_memory_used = 5;
  }

  repeated Node nodes = 1;

  // TODO(kenji): Add pod utilization information.
}

message SendClusterTelemetryResponse {
}

service ClusterMonitorWorkerService {
  rpc SendClusterTelemetry(SendClusterTelemetryRequest) returns (SendClusterTelemetryResponse);
}
