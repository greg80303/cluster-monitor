// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: api/v1/monitor_server_worker.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendClusterTelemetryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payloads []*SendClusterTelemetryRequest_Payload `protobuf:"bytes,1,rep,name=payloads,proto3" json:"payloads,omitempty"`
}

func (x *SendClusterTelemetryRequest) Reset() {
	*x = SendClusterTelemetryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_monitor_server_worker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendClusterTelemetryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendClusterTelemetryRequest) ProtoMessage() {}

func (x *SendClusterTelemetryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitor_server_worker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendClusterTelemetryRequest.ProtoReflect.Descriptor instead.
func (*SendClusterTelemetryRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_monitor_server_worker_proto_rawDescGZIP(), []int{0}
}

func (x *SendClusterTelemetryRequest) GetPayloads() []*SendClusterTelemetryRequest_Payload {
	if x != nil {
		return x.Payloads
	}
	return nil
}

type ClusterSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*ClusterSnapshot_Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ClusterSnapshot) Reset() {
	*x = ClusterSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_monitor_server_worker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterSnapshot) ProtoMessage() {}

func (x *ClusterSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitor_server_worker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterSnapshot.ProtoReflect.Descriptor instead.
func (*ClusterSnapshot) Descriptor() ([]byte, []int) {
	return file_api_v1_monitor_server_worker_proto_rawDescGZIP(), []int{1}
}

func (x *ClusterSnapshot) GetNodes() []*ClusterSnapshot_Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type GpuTelemetry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*GpuTelemetry_Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *GpuTelemetry) Reset() {
	*x = GpuTelemetry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_monitor_server_worker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GpuTelemetry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpuTelemetry) ProtoMessage() {}

func (x *GpuTelemetry) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitor_server_worker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpuTelemetry.ProtoReflect.Descriptor instead.
func (*GpuTelemetry) Descriptor() ([]byte, []int) {
	return file_api_v1_monitor_server_worker_proto_rawDescGZIP(), []int{2}
}

func (x *GpuTelemetry) GetNodes() []*GpuTelemetry_Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type SendClusterTelemetryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendClusterTelemetryResponse) Reset() {
	*x = SendClusterTelemetryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_monitor_server_worker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendClusterTelemetryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendClusterTelemetryResponse) ProtoMessage() {}

func (x *SendClusterTelemetryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitor_server_worker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendClusterTelemetryResponse.ProtoReflect.Descriptor instead.
func (*SendClusterTelemetryResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_monitor_server_worker_proto_rawDescGZIP(), []int{3}
}

type SendClusterTelemetryRequest_Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to MessageKind:
	//
	//	*SendClusterTelemetryRequest_Payload_ClusterSnapshot
	//	*SendClusterTelemetryRequest_Payload_GpuTelemetry
	MessageKind isSendClusterTelemetryRequest_Payload_MessageKind `protobuf_oneof:"message_kind"`
}

func (x *SendClusterTelemetryRequest_Payload) Reset() {
	*x = SendClusterTelemetryRequest_Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_monitor_server_worker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendClusterTelemetryRequest_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendClusterTelemetryRequest_Payload) ProtoMessage() {}

func (x *SendClusterTelemetryRequest_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitor_server_worker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendClusterTelemetryRequest_Payload.ProtoReflect.Descriptor instead.
func (*SendClusterTelemetryRequest_Payload) Descriptor() ([]byte, []int) {
	return file_api_v1_monitor_server_worker_proto_rawDescGZIP(), []int{0, 0}
}

func (m *SendClusterTelemetryRequest_Payload) GetMessageKind() isSendClusterTelemetryRequest_Payload_MessageKind {
	if m != nil {
		return m.MessageKind
	}
	return nil
}

func (x *SendClusterTelemetryRequest_Payload) GetClusterSnapshot() *ClusterSnapshot {
	if x, ok := x.GetMessageKind().(*SendClusterTelemetryRequest_Payload_ClusterSnapshot); ok {
		return x.ClusterSnapshot
	}
	return nil
}

func (x *SendClusterTelemetryRequest_Payload) GetGpuTelemetry() *GpuTelemetry {
	if x, ok := x.GetMessageKind().(*SendClusterTelemetryRequest_Payload_GpuTelemetry); ok {
		return x.GpuTelemetry
	}
	return nil
}

type isSendClusterTelemetryRequest_Payload_MessageKind interface {
	isSendClusterTelemetryRequest_Payload_MessageKind()
}

type SendClusterTelemetryRequest_Payload_ClusterSnapshot struct {
	ClusterSnapshot *ClusterSnapshot `protobuf:"bytes,1,opt,name=cluster_snapshot,json=clusterSnapshot,proto3,oneof"`
}

type SendClusterTelemetryRequest_Payload_GpuTelemetry struct {
	GpuTelemetry *GpuTelemetry `protobuf:"bytes,2,opt,name=gpu_telemetry,json=gpuTelemetry,proto3,oneof"` // TODO(kenji): Add more (e.g., node GPU utilization)
}

func (*SendClusterTelemetryRequest_Payload_ClusterSnapshot) isSendClusterTelemetryRequest_Payload_MessageKind() {
}

func (*SendClusterTelemetryRequest_Payload_GpuTelemetry) isSendClusterTelemetryRequest_Payload_MessageKind() {
}

type ClusterSnapshot_Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string                                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	GpuCapacity      int32                                  `protobuf:"varint,2,opt,name=gpu_capacity,json=gpuCapacity,proto3" json:"gpu_capacity,omitempty"`
	MemoryCapacity   int64                                  `protobuf:"varint,3,opt,name=memory_capacity,json=memoryCapacity,proto3" json:"memory_capacity,omitempty"`
	NvidiaAttributes *ClusterSnapshot_Node_NvidiaAttributes `protobuf:"bytes,4,opt,name=nvidia_attributes,json=nvidiaAttributes,proto3" json:"nvidia_attributes,omitempty"`
	GpuOccupancy     int32                                  `protobuf:"varint,5,opt,name=gpu_occupancy,json=gpuOccupancy,proto3" json:"gpu_occupancy,omitempty"`
	PodCount         int32                                  `protobuf:"varint,6,opt,name=pod_count,json=podCount,proto3" json:"pod_count,omitempty"`
}

func (x *ClusterSnapshot_Node) Reset() {
	*x = ClusterSnapshot_Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_monitor_server_worker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterSnapshot_Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterSnapshot_Node) ProtoMessage() {}

func (x *ClusterSnapshot_Node) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitor_server_worker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterSnapshot_Node.ProtoReflect.Descriptor instead.
func (*ClusterSnapshot_Node) Descriptor() ([]byte, []int) {
	return file_api_v1_monitor_server_worker_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ClusterSnapshot_Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClusterSnapshot_Node) GetGpuCapacity() int32 {
	if x != nil {
		return x.GpuCapacity
	}
	return 0
}

func (x *ClusterSnapshot_Node) GetMemoryCapacity() int64 {
	if x != nil {
		return x.MemoryCapacity
	}
	return 0
}

func (x *ClusterSnapshot_Node) GetNvidiaAttributes() *ClusterSnapshot_Node_NvidiaAttributes {
	if x != nil {
		return x.NvidiaAttributes
	}
	return nil
}

func (x *ClusterSnapshot_Node) GetGpuOccupancy() int32 {
	if x != nil {
		return x.GpuOccupancy
	}
	return 0
}

func (x *ClusterSnapshot_Node) GetPodCount() int32 {
	if x != nil {
		return x.PodCount
	}
	return 0
}

type ClusterSnapshot_Node_NvidiaAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product string `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *ClusterSnapshot_Node_NvidiaAttributes) Reset() {
	*x = ClusterSnapshot_Node_NvidiaAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_monitor_server_worker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterSnapshot_Node_NvidiaAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterSnapshot_Node_NvidiaAttributes) ProtoMessage() {}

func (x *ClusterSnapshot_Node_NvidiaAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitor_server_worker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterSnapshot_Node_NvidiaAttributes.ProtoReflect.Descriptor instead.
func (*ClusterSnapshot_Node_NvidiaAttributes) Descriptor() ([]byte, []int) {
	return file_api_v1_monitor_server_worker_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *ClusterSnapshot_Node_NvidiaAttributes) GetProduct() string {
	if x != nil {
		return x.Product
	}
	return ""
}

type GpuTelemetry_Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MaxGpuUsed       float32 `protobuf:"fixed32,2,opt,name=max_gpu_used,json=maxGpuUsed,proto3" json:"max_gpu_used,omitempty"`
	AvgGpuUsed       float32 `protobuf:"fixed32,3,opt,name=avg_gpu_used,json=avgGpuUsed,proto3" json:"avg_gpu_used,omitempty"`
	MaxGpuMemoryUsed int64   `protobuf:"varint,4,opt,name=max_gpu_memory_used,json=maxGpuMemoryUsed,proto3" json:"max_gpu_memory_used,omitempty"`
	AvgGpuMemoryUsed int64   `protobuf:"varint,5,opt,name=avg_gpu_memory_used,json=avgGpuMemoryUsed,proto3" json:"avg_gpu_memory_used,omitempty"`
}

func (x *GpuTelemetry_Node) Reset() {
	*x = GpuTelemetry_Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_monitor_server_worker_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GpuTelemetry_Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpuTelemetry_Node) ProtoMessage() {}

func (x *GpuTelemetry_Node) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitor_server_worker_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpuTelemetry_Node.ProtoReflect.Descriptor instead.
func (*GpuTelemetry_Node) Descriptor() ([]byte, []int) {
	return file_api_v1_monitor_server_worker_proto_rawDescGZIP(), []int{2, 0}
}

func (x *GpuTelemetry_Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GpuTelemetry_Node) GetMaxGpuUsed() float32 {
	if x != nil {
		return x.MaxGpuUsed
	}
	return 0
}

func (x *GpuTelemetry_Node) GetAvgGpuUsed() float32 {
	if x != nil {
		return x.AvgGpuUsed
	}
	return 0
}

func (x *GpuTelemetry_Node) GetMaxGpuMemoryUsed() int64 {
	if x != nil {
		return x.MaxGpuMemoryUsed
	}
	return 0
}

func (x *GpuTelemetry_Node) GetAvgGpuMemoryUsed() int64 {
	if x != nil {
		return x.AvgGpuMemoryUsed
	}
	return 0
}

var File_api_v1_monitor_server_worker_proto protoreflect.FileDescriptor

var file_api_v1_monitor_server_worker_proto_rawDesc = []byte{
	0x0a, 0x22, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x22, 0xd9, 0x02, 0x0a, 0x1b, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x63, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x6c, 0x6c, 0x6d,
	0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x1a, 0xd4, 0x01,
	0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x60, 0x0a, 0x10, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x57, 0x0a, 0x0d, 0x67,
	0x70, 0x75, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x70, 0x75, 0x54, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x67, 0x70, 0x75, 0x54, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x42, 0x0e, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x6b, 0x69, 0x6e, 0x64, 0x22, 0xb2, 0x03, 0x0a, 0x0f, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x4e, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69,
	0x6e, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x1a, 0xce, 0x02, 0x0a, 0x04, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x70, 0x75, 0x5f, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x70, 0x75,
	0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x76, 0x0a, 0x11, 0x6e, 0x76, 0x69, 0x64, 0x69, 0x61, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x6c,
	0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x4e, 0x76, 0x69, 0x64, 0x69, 0x61, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x10, 0x6e, 0x76, 0x69, 0x64, 0x69, 0x61, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x70, 0x75,
	0x5f, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x67, 0x70, 0x75, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x6e, 0x63, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6f, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x6f, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x2c, 0x0a, 0x10, 0x4e,
	0x76, 0x69, 0x64, 0x69, 0x61, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x9a, 0x02, 0x0a, 0x0c, 0x47, 0x70,
	0x75, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x4b, 0x0a, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6c, 0x6c, 0x6d, 0x61,
	0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x70, 0x75, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x1a, 0xbc, 0x01, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x67, 0x70, 0x75, 0x5f,
	0x75, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x47,
	0x70, 0x75, 0x55, 0x73, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x76, 0x67, 0x5f, 0x67, 0x70,
	0x75, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x61, 0x76,
	0x67, 0x47, 0x70, 0x75, 0x55, 0x73, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f,
	0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x55, 0x73, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x61, 0x76, 0x67, 0x5f, 0x67,
	0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x61, 0x76, 0x67, 0x47, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x55, 0x73, 0x65, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb9, 0x01, 0x0a, 0x1b, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12,
	0x3f, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x40, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x2d, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_monitor_server_worker_proto_rawDescOnce sync.Once
	file_api_v1_monitor_server_worker_proto_rawDescData = file_api_v1_monitor_server_worker_proto_rawDesc
)

func file_api_v1_monitor_server_worker_proto_rawDescGZIP() []byte {
	file_api_v1_monitor_server_worker_proto_rawDescOnce.Do(func() {
		file_api_v1_monitor_server_worker_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_monitor_server_worker_proto_rawDescData)
	})
	return file_api_v1_monitor_server_worker_proto_rawDescData
}

var file_api_v1_monitor_server_worker_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_api_v1_monitor_server_worker_proto_goTypes = []interface{}{
	(*SendClusterTelemetryRequest)(nil),           // 0: llmariner.clustermonitor.server.v1.SendClusterTelemetryRequest
	(*ClusterSnapshot)(nil),                       // 1: llmariner.clustermonitor.server.v1.ClusterSnapshot
	(*GpuTelemetry)(nil),                          // 2: llmariner.clustermonitor.server.v1.GpuTelemetry
	(*SendClusterTelemetryResponse)(nil),          // 3: llmariner.clustermonitor.server.v1.SendClusterTelemetryResponse
	(*SendClusterTelemetryRequest_Payload)(nil),   // 4: llmariner.clustermonitor.server.v1.SendClusterTelemetryRequest.Payload
	(*ClusterSnapshot_Node)(nil),                  // 5: llmariner.clustermonitor.server.v1.ClusterSnapshot.Node
	(*ClusterSnapshot_Node_NvidiaAttributes)(nil), // 6: llmariner.clustermonitor.server.v1.ClusterSnapshot.Node.NvidiaAttributes
	(*GpuTelemetry_Node)(nil),                     // 7: llmariner.clustermonitor.server.v1.GpuTelemetry.Node
}
var file_api_v1_monitor_server_worker_proto_depIdxs = []int32{
	4, // 0: llmariner.clustermonitor.server.v1.SendClusterTelemetryRequest.payloads:type_name -> llmariner.clustermonitor.server.v1.SendClusterTelemetryRequest.Payload
	5, // 1: llmariner.clustermonitor.server.v1.ClusterSnapshot.nodes:type_name -> llmariner.clustermonitor.server.v1.ClusterSnapshot.Node
	7, // 2: llmariner.clustermonitor.server.v1.GpuTelemetry.nodes:type_name -> llmariner.clustermonitor.server.v1.GpuTelemetry.Node
	1, // 3: llmariner.clustermonitor.server.v1.SendClusterTelemetryRequest.Payload.cluster_snapshot:type_name -> llmariner.clustermonitor.server.v1.ClusterSnapshot
	2, // 4: llmariner.clustermonitor.server.v1.SendClusterTelemetryRequest.Payload.gpu_telemetry:type_name -> llmariner.clustermonitor.server.v1.GpuTelemetry
	6, // 5: llmariner.clustermonitor.server.v1.ClusterSnapshot.Node.nvidia_attributes:type_name -> llmariner.clustermonitor.server.v1.ClusterSnapshot.Node.NvidiaAttributes
	0, // 6: llmariner.clustermonitor.server.v1.ClusterMonitorWorkerService.SendClusterTelemetry:input_type -> llmariner.clustermonitor.server.v1.SendClusterTelemetryRequest
	3, // 7: llmariner.clustermonitor.server.v1.ClusterMonitorWorkerService.SendClusterTelemetry:output_type -> llmariner.clustermonitor.server.v1.SendClusterTelemetryResponse
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_api_v1_monitor_server_worker_proto_init() }
func file_api_v1_monitor_server_worker_proto_init() {
	if File_api_v1_monitor_server_worker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_monitor_server_worker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendClusterTelemetryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_monitor_server_worker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_monitor_server_worker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GpuTelemetry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_monitor_server_worker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendClusterTelemetryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_monitor_server_worker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendClusterTelemetryRequest_Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_monitor_server_worker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterSnapshot_Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_monitor_server_worker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterSnapshot_Node_NvidiaAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_monitor_server_worker_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GpuTelemetry_Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_monitor_server_worker_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*SendClusterTelemetryRequest_Payload_ClusterSnapshot)(nil),
		(*SendClusterTelemetryRequest_Payload_GpuTelemetry)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_monitor_server_worker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_monitor_server_worker_proto_goTypes,
		DependencyIndexes: file_api_v1_monitor_server_worker_proto_depIdxs,
		MessageInfos:      file_api_v1_monitor_server_worker_proto_msgTypes,
	}.Build()
	File_api_v1_monitor_server_worker_proto = out.File
	file_api_v1_monitor_server_worker_proto_rawDesc = nil
	file_api_v1_monitor_server_worker_proto_goTypes = nil
	file_api_v1_monitor_server_worker_proto_depIdxs = nil
}
